---
- name: "Install makepasswd"
  apt: pkg=makepasswd state=present

- name: "Install Git"
  apt: pkg=git state=present

- name: "Install tig"
  apt: pkg=tig state=present

- name: "Install curl"
  apt: pkg=curl state=present

- name: "Install php5-curl"
  apt: pkg=php5-curl state=present

- name: "Install rake"
  apt: pkg=rake state=present

- name: "Install composer"
  shell: "curl -sS https://getcomposer.org/installer | php && mv composer.phar /usr/local/bin/composer"
  args:
    creates: /usr/local/bin/composer

- name: "Install drush"
  tags: drush
  shell: "{{ item }}"
  with_items:
    - "git clone https://github.com/drush-ops/drush.git /usr/local/src/drush"
    - "ln -sf /usr/local/src/drush/drush /usr/local/bin/drush"
  args:
    creates: /usr/local/bin/drush

- name: "Get current drush version"
  tags: drush
  shell: "drush --version | cut -f2 -d ':' | xargs"
  changed_when: false
  register: drush_current_version

- name: "Update drush version"
  tags: drush
  shell: "{{ item }}"
  with_items:
    - "cd /usr/local/src/drush && git checkout {{ drush_version }}"
    - "cd /usr/local/src/drush && composer install"
  when:
    - ('{{ drush_current_version.stdout }}' != '{{ drush_version }}')

- name: Create a password for root
  shell: "{{ item }}"
  with_items:
    - "mkdir -p /root/passwords"
    - "makepasswd -chars {{ password_chars }} > /root/passwords/root"
    - "chmod 700 /root/passwords/root"
  args:
    creates: /root/passwords/root

- name: Get password for root
  shell: "cat /root/passwords/root"
  changed_when: false
  register: root_password

- name: Set root password
  shell: "echo root:$(cat /root/passwords/root) | chpasswd"
  when: "root_password.stdout != ''"

- name: Fetch password for root
  fetch:
  args:
    dest: fetched/passwords/root
    src: /root/passwords/root
    fail_on_missing: yes
    flat: yes
    validate_checksum: yes
  when: "root_password.stdout != ''"

# Leave password file in place so the password creation task doesn't fire.
- name: Remove cleartext password temporary file
  shell: "cat /dev/null > /root/passwords/root"
  when: ('{{ root_password.stdout }}' != '' and remove_user_passwords == true)
